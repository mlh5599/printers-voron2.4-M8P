# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "8KiB bootloader" and USB communication.

# This config is currently only correct for V2.0 boards
#Test
# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include stealthburner_led.cfg]
[include extruder.cfg]
[exclude_object]

#Klipperscreen
[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[mcu]
canbus_uuid: 727f47e4b6da

[include rp2040-canbus.cfg]

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

[temperature_sensor chamber_temp]
sensor_type: Honeywell 100K 135-104LAG-J01
sensor_pin: PB1
pullup_resistor: 4700


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:gpio24
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC13
interpolate: True
run_current: 0.9
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF3
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE3
interpolate: True
run_current: 0.9
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PB9
interpolate: true
run_current: 0.8
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on Motor5
[stepper_z1]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PG14
interpolate: true
run_current: 0.8
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor6
[stepper_z2]
step_pin: PG9
dir_pin: PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PG10
interpolate: true
run_current: 0.8
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor7
[stepper_z3]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PD5
interpolate: true
run_current: 0.8
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PB0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


#####################################################################
# 	Fan Control
#####################################################################

[multi_pin electronics_bay]
pins: PF7, PF9

[fan_generic controller_fan]
pin: multi_pin:electronics_bay
kick_start_time: 0.5

[fan_generic chamber_fan]
pin: PF6
kick_start_time: 0.5

#[fan]
###	Print Cooling Fan - CNC_FAN0
#pin: PF7
#kick_start_time: 0.5
###	Depending on your fan, you may need to increase this value
###	if your fan will not start. Can change cycle_time (increase)
###	if your fan is not able to slow down effectively
#off_below: 0.10

#[heater_fan hotend_fan]
###	Hotend Fan - CNC_FAN1
#pin: PF9
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
##fan_speed: 1.0

#[heater_fan controller_fan]
###	Controller fan - CNC_FAN2
#pin: PF6
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 45.0


[heater_fan nevermore_fan]
pin: PF8
heater: heater_bed
heater_temp: 55
fan_speed: .5
kick_start_time: 0.3        # (Optional) Spins the fan briefly at full power on startup


#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#[heater_fan fan4]
#pin: PA4

#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
 #Chamber Lighting - HE2 Connector (Optional)
pin: PA3
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:175,175
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


#################################################################################
# Bed Mesh Section
#################################################################################
[bed_mesh]
speed: 300

horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210
#zero_reference_position: 125,125 #for use with stock z endstop

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
#zero_reference_position: 150,150 #for use with stock z endstop

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
#zero_reference_position: 175,175 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0

probe_count: 5, 5 # Values should be odd, so one point is directly at bed center
#algorithm: bicubic

#--------------------------------------------------------------------



#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    
    BED_MESH_CLEAR
    
    {% if "xyz" not in printer.toolhead.homed_axes %}
    STATUS_HOMING
    M117 Homing...
    G28
    {% endif %}
    
    STATUS_LEVELING
    M117 Leveling...
    QUAD_GANTRY_LEVEL
    
    M117 Homing...
    G28
    
    STATUS_MESHING
    M117 Meshing...
    BED_MESH_CALIBRATE ADAPTIVE=1
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    STATUS_READY
    
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set SOAK_TIME = params.SOAK_TIME|default(0)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}

    #Get a head start on bed heating
    STATUS_HEATING
    M117 Heating bed
    M140 S{BED_TEMP}

    #Home if we aren't already so we can start moving
    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    
    #Move to the back so we can start cleaning

    M117 Starting cleaning routine
    BRUSH_PARK
    #Heat up for a min so we can clean the tip
    STATUS_HEATING_HOTEND
#    M109 S{EXTRUDER_TEMP}
#    G4 P{1 * 60 * 1000}

#    BRUSH_WIPE
#    BRUSH_PARK
#    M109 S{EXTRUDER_TEMP-20}
#    BRUSH_WIPE
#    BRUSH_PARK

#    M109 S{EXTRUDER_TEMP-30}
#    BRUSH_WIPE
#    BRUSH_PARK

    M109 S{EXTRUDER_TEMP-40}
    BRUSH_WIPE
    BRUSH_PARK
    
    M104 S0                        ; we should be clean now, cool down so we can probe  

    M117 "Waiting for chamber temperature of {CHAMBER_TEMP}c
    #Wait for chamber temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={CHAMBER_TEMP}
    #Let's heat soak
    STATUS_HEATING


    M117 "Waiting for bed temperature of {BED_TEMP}"
    M190 S{BED_TEMP}  ; Wait for bed temp before soaking

    {% set soak_minutes = SOAK_TIME|int %}
    {% for minute in range(soak_minutes, 0, -1) %}
      M117 Heat soaking, { minute } mins left
      G4 P60000  ; Wait 1 minute
    {% endfor %}

#    M117 Heat soaking for {SOAK_TIME} min
#    M190 S{BED_TEMP}               ; keep waiting on bed to come to temp before soaking

#    G4 P{SOAK_TIME * 60 * 1000}    ; soak if defined by the slicer

    #Heat soaked and clean, let's home and level again.
    M117 Bringing nozzle to 170 for probing
    STATUS_HEATING_HOTEND
    M109 S170                      ; This time let's heat up a bit to help with expansion, no more than 170 to save the PEI
    G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    G90                            ; absolute positioning
    BRUSH_PARK                     ; park nozzle at rear to ooze at the back

    #Heat up the nozzle
    STATUS_HEATING_HOTEND
    M117 Heating extruder...
    M109 S{EXTRUDER_TEMP}

    BRUSH_WIPE

    SET_FAN_SPEED fan=controller_fan speed=.5
    
    M117 Printing...
    STATUS_PRINTING
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M117 Print Complete
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    STATUS_COOLING
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    BRUSH_PARK                     ; park nozzle over the bin
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    SET_FAN_SPEED fan=controller_fan speed=0
    STATUS_OFF
    
[gcode_macro CENTER_ALL]
gcode:
    G90             ; Use absolute positioning
    G1 X175 Y175 Z175 F6000  ; Move to 175,175,175 at a feedrate of 6000 mm/min

[gcode_macro BRUSH_WIPE]
description: "Tight zigzag nozzle wiping on brush"
gcode:
    M117 Cleaning the nozzle...
    {% set x_min = 265 %}
    {% set x_max = 300 %}
    {% set y_min = 340 %}
    {% set y_max = 349 %}
    {% set steps = 35 %}  # Number of zigzag passes

    {% set y = y_max %}
    {% set x = x_max %}

    #Home if we aren't already so we can start moving
    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    
    #Move to start of wipe, back right of brush
    G90
    G1 X{ x } Y{ y } Z5.2 F6000    
    
    {% for i in range(steps) %}
      {% if loop.index % 2 == 0 %}
        {% set y = y_min %}
      {% else %}
        {% set y = y_max %}
      {% endif %}
      G1 X{ x-i } Y{ y } F6000
    {% endfor %}

    G1 X{ x } Y{ y } Z5.2 F6000   

    {% set steps=9 %}
    
    {% for i in range(steps) %}
      {% if loop.index % 2 == 0 %}
        {% set x = x_min %}
      {% else %}
        {% set x = x_max %}
      {% endif %}
      G1 X{ x } Y{ y-1 } F6000
    {% endfor %}

    G1 X{x_min -10} Y{y_min - 10}  ; The first print move will start z moving down, don't crash into the brush

[gcode_macro BRUSH_PARK]
gcode:

    #Home if we aren't already so we can start moving
    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    
    G91
    G1 Z10
    G90
    G1 X{ 315 } Y{ 349 } F6000
    G1 Z5.2 F6000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.146
#*# pid_ki = 1.110
#*# pid_kd = 310.635
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 84.8
#*# shaper_type_y = ei
#*# shaper_freq_y = 41.4
#*#
#*# [bed_mesh 100c_0min]
#*# version = 1
#*# points =
#*# 	0.051104, 0.146104, 0.181104, 0.141104, 0.081104
#*# 	-0.001396, 0.033604, 0.096104, 0.078604, -0.018896
#*# 	-0.053896, 0.011104, 0.061104, 0.026104, -0.023896
#*# 	0.026104, 0.046104, 0.103604, 0.093604, 0.016104
#*# 	0.181104, 0.256104, 0.286104, 0.266104, 0.181104
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh 100c_10min]
#*# version = 1
#*# points =
#*# 	-0.052850, 0.024650, 0.067150, 0.019650, -0.035350
#*# 	-0.132850, -0.085350, -0.032850, -0.062850, -0.142850
#*# 	-0.182850, -0.120350, -0.080350, -0.102850, -0.152850
#*# 	-0.095350, -0.067850, -0.015350, -0.027850, -0.090350
#*# 	0.092150, 0.154650, 0.189650, 0.169650, 0.099650
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh 100c_20min]
#*# version = 1
#*# points =
#*# 	0.017000, 0.102000, 0.144500, 0.102000, 0.052000
#*# 	-0.058000, -0.020500, 0.032000, 0.002000, -0.068000
#*# 	-0.113000, -0.055500, -0.010500, -0.030500, -0.093000
#*# 	-0.015500, 0.014500, 0.052000, 0.039500, -0.015500
#*# 	0.179500, 0.247000, 0.274500, 0.249500, 0.184500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh 100c_30min]
#*# version = 1
#*# points =
#*# 	0.012000, 0.094500, 0.129500, 0.099500, 0.047000
#*# 	-0.070500, -0.035500, 0.009500, -0.003000, -0.083000
#*# 	-0.133000, -0.070500, -0.018000, -0.040500, -0.115500
#*# 	-0.048000, 0.007000, 0.029500, 0.022000, -0.043000
#*# 	0.189500, 0.252000, 0.272000, 0.234500, 0.172000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
